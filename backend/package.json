{
  "name": "augustium-insurance-backend",
  "version": "1.0.0",
  "description": "Augustium Health Insurance Claims Processing Backend - A professional-grade blockchain-based insurance claims system",
  "main": "dist/server.js",
  "scripts": {
    "start": "node dist/server.js",
    "dev": "nodemon src/server.ts",
    "build": "tsc",
    "build:watch": "tsc --watch",
    "clean": "rimraf dist",
    "prebuild": "npm run clean",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "jest --config jest.e2e.config.js",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts",
    "format:check": "prettier --check src/**/*.ts",
    "typecheck": "tsc --noEmit",
    "db:migrate": "node dist/scripts/migrate.js",
    "db:seed": "node dist/scripts/seed.js",
    "db:reset": "node dist/scripts/reset.js",
    "docker:build": "docker build -t augustium-insurance-backend .",
    "docker:run": "docker run -p 3000:3000 augustium-insurance-backend",
    "audit:security": "npm audit --audit-level moderate",
    "audit:licenses": "license-checker --summary",
    "docs:generate": "typedoc src --out docs",
    "health:check": "curl -f http://localhost:3000/health || exit 1"
  },
  "keywords": [
    "insurance",
    "claims",
    "blockchain",
    "augustium",
    "healthcare",
    "fraud-detection",
    "smart-contracts",
    "multi-signature",
    "settlements",
    "api",
    "typescript",
    "nodejs",
    "express",
    "postgresql",
    "redis"
  ],
  "author": {
    "name": "Augustium Insurance Team",
    "email": "dev@augustium-insurance.com",
    "url": "https://augustium-insurance.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/augustium/insurance-claims-backend.git"
  },
  "bugs": {
    "url": "https://github.com/augustium/insurance-claims-backend/issues"
  },
  "homepage": "https://github.com/augustium/insurance-claims-backend#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/dompurify": "^3.0.5",
    "@types/joi": "^17.2.2",
    "@types/jsdom": "^21.1.7",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/pg": "^8.15.4",
    "@types/socket.io": "^3.0.1",
    "bcryptjs": "^3.0.2",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dompurify": "^3.2.6",
    "dotenv": "^16.3.1",
    "ethers": "^6.15.0",
    "express": "^4.18.2",
    "express-async-errors": "^3.1.1",
    "express-rate-limit": "^6.8.1",
    "express-slow-down": "^1.6.0",
    "helmet": "^7.0.0",
    "http-status-codes": "^2.2.0",
    "ioredis": "^5.6.1",
    "joi": "^17.13.3",
    "jsdom": "^26.1.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "pg": "^8.16.3",
    "socket.io": "^4.8.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "tsconfig-paths": "^4.2.0",
    "winston": "^3.10.0",
    "winston-daily-rotate-file": "^5.0.0",
    "zod": "^4.0.5"
  },
  "devDependencies": {
    "@types/compression": "^1.7.2",
    "@types/cors": "^2.8.13",
    "@types/express": "^4.17.17",
    "@types/express-slow-down": "^1.3.5",
    "@types/morgan": "^1.9.4",
    "@types/node": "^20.4.2",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "eslint": "^8.57.1",
    "nodemon": "^3.0.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.1.6"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/types/**",
      "!src/**/*.interface.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ]
  },
  "nodemonConfig": {
    "watch": [
      "src"
    ],
    "ext": "ts",
    "ignore": [
      "src/**/*.spec.ts",
      "src/**/*.test.ts"
    ],
    "exec": "ts-node src/server.ts"
  }
}
